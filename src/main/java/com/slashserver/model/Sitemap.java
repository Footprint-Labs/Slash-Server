package com.slashserver.model;

// Generated 05-Dec-2011 23:49:32 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.codehaus.jackson.annotate.JsonIgnoreProperties;

/**
 * Sitemap generated by hbm2java
 */
@Entity
@JsonIgnoreProperties({"hibernateLazyInitializer", "handler","sitemapPages"})
@Table(name = "sitemap", catalog = "slash_server", uniqueConstraints = @UniqueConstraint(columnNames = "name"))
public class Sitemap implements HasId {


	private int id;
	private String name;
	private Set<SitemapPage> sitemapPages = new HashSet<SitemapPage>(0);

	public Sitemap() {
	}

	public Sitemap(int id, String name) {
		this.id = id;
		this.name = name;
	}

	public Sitemap(int id, String name, Set<SitemapPage> sitemapPages) {
		this.id = id;
		this.name = name;
		this.sitemapPages = sitemapPages;
	}

	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Column(name = "name", unique = true, nullable = false, length = 45)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sitemap",cascade={CascadeType.REMOVE})
	public Set<SitemapPage> getSitemapPages() {
		return this.sitemapPages;
	}

	public void setSitemapPages(Set<SitemapPage> sitemapPages) {
		this.sitemapPages = sitemapPages;
	}

}
