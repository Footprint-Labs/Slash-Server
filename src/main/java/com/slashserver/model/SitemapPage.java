package com.slashserver.model;

// Generated 05-Dec-2011 23:49:32 by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.codehaus.jackson.annotate.JsonIgnoreProperties;

/**
 * SitemapPage generated by hbm2java
 */
@Entity
@JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
@Table(name = "sitemap_page", catalog = "slash_server")
public class SitemapPage implements HasId {

	private int id;
	private Page pageByParentId;
	private Page pageByPageId;
	private Sitemap sitemap;
	private Integer index;

	public SitemapPage() {
	}

	public SitemapPage(int id, Page pageByPageId, Sitemap sitemap) {
		this.id = id;
		this.pageByPageId = pageByPageId;
		this.sitemap = sitemap;
	}

	public SitemapPage(int id, Page pageByParentId, Page pageByPageId, Sitemap sitemap) {
		this.id = id;
		this.pageByParentId = pageByParentId;
		this.pageByPageId = pageByPageId;
		this.sitemap = sitemap;
	}

	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "parent_id")
	public Page getPageByParentId() {
		return this.pageByParentId;
	}

	public void setPageByParentId(Page pageByParentId) {
		this.pageByParentId = pageByParentId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "page_id", nullable = false)
	public Page getPageByPageId() {
		return this.pageByPageId;
	}

	public void setPageByPageId(Page pageByPageId) {
		this.pageByPageId = pageByPageId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "sitemap_id", nullable = false)
	public Sitemap getSitemap() {
		return this.sitemap;
	}

	public void setSitemap(Sitemap sitemap) {
		this.sitemap = sitemap;
	}
	
	@Column(name = "`index`")
	public Integer getIndex() {
		return index;
	}
	
	public void setIndex(Integer index) {
		this.index = index;
	}

}
