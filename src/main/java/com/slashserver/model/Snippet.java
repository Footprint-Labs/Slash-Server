package com.slashserver.model;

// Generated 05-Dec-2011 23:49:32 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.codehaus.jackson.annotate.JsonIgnoreProperties;

/**
 * Snippet generated by hbm2java
 */
@Entity
@JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
@Table(name = "snippet", catalog = "slash_server")
public class Snippet implements HasId {

	private int id;
	private SnippetGroup snippetGroup;
	private String url;
	private String name;
	private Set<PageSnippet> pageSnippets = new HashSet<PageSnippet>(0);

	public Snippet() {
	}
	
	public Snippet(int id) {
		this.id=id;
	}

	public Snippet(int id, String url, String name) {
		this.id = id;
		this.url = url;
		this.name = name;
	}

	public Snippet(int id, SnippetGroup snippetGroup, String url, String name, Set<PageSnippet> pageSnippets) {
		this.id = id;
		this.snippetGroup = snippetGroup;
		this.url = url;
		this.name = name;
		this.pageSnippets = pageSnippets;
	}

	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "snippet_group_id")
	public SnippetGroup getSnippetGroup() {
		return this.snippetGroup;
	}

	public void setSnippetGroup(SnippetGroup snippetGroup) {
		this.snippetGroup = snippetGroup;
	}

	@Column(name = "url", nullable = false, length = 200)
	public String getUrl() {
		return this.url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	@Column(name = "name", nullable = false, length = 200)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "snippet")
	public Set<PageSnippet> getPageSnippets() {
		return this.pageSnippets;
	}

	public void setPageSnippets(Set<PageSnippet> pageSnippets) {
		this.pageSnippets = pageSnippets;
	}

}
